plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "me.champeau.jmh" version "0.7.1"
}

group = 'com.jmsoftware'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    jmhAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.neovisionaries:nv-i18n:1.29'
}

tasks.named('test') {
    useJUnitPlatform()
    // https://mkyong.com/gradle/gradle-display-test-results-in-console/
    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }
    // https://junit.org/junit5/docs/current/user-guide/index.html#writing-tests-parallel-execution
    // https://www.jvt.me/posts/2021/03/11/gradle-speed-parallel/
    systemProperties([
            // Configuration parameters to execute all tests in parallel
            'junit.jupiter.execution.parallel.enabled'     : 'true',
            'junit.jupiter.execution.parallel.mode.default': 'concurrent',
    ])
}

// https://github.com/melix/jmh-gradle-plugin#configuration-options
jmh {
    warmupIterations = 2
    iterations = 5
    benchmarkMode = ['thrpt', 'ss']
    fork = 1
    threads = 2
    includeTests = true
    timeOnIteration = '1s'
    warmup = '1s'
    verbosity = 'SILENT'
}
